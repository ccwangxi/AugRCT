library(knitr)
library(markdown)
library(rmarkdown)
library(stringr)
# load R functions
#root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
root.path <- "D:\\Merck Intern\\OneDrive\\AugRCT_new\\"
code.path <- paste0(root.path,"R\\")
source(paste0(code.path,"RFunctions.R"))
# imported from rwe package for stratification + power prior approaches
source(paste0(code.path,"rwe_functions.R"))
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
# load R functions
#root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
root.path <- "D:\\Merck Intern\\OneDrive\\AugRCT_new\\"
code.path <- paste0(root.path,"R\\")
source(paste0(code.path,"RFunctions.R"))
Dir.name <- "Drift"
n.sim <- 500
load(file = paste0(root.path,"Simulation results\\R Data\\simu_true_theta1.RData")) #unm.conf.inds, data.source.mx, simu.true
load(file = paste0(root.path,"Simulation results\\R Data\\freq_RD_drift1_5000_0821.RData"))
unique(comps.freq$label)
comps.freq <- comps.freq
load(file = paste0(root.path,"Simulation results\\R Data\\stan_RD_drift1_5000_0821.RData"))
unique(comps$fit)
comps <- comps %>% dplyr::filter(! fit %in% c("Stratification + fixed Power Prior",
"IPTW trim + fixed power prior (logit model)"))
comps.freq$set.num <- as.character(comps.freq$set.num)
comps$set.num <- as.character(comps$set.num)
comps <- merge(comps, simu.true, by="set.num")
comps.freq <- merge(comps.freq, simu.true, by="set.num")
# generate table
comps <- comps %>% dplyr::mutate(point.est = mean, lower.CI = X2.5., upper.CI = X97.5.,label = fit) %>%
dplyr::select(point.est,lower.CI,upper.CI,label,sim,
set.num, data.source, unm.confs, lambdas, true.thetaE, true.thetaCD,true.thetaCH, data.source.diff,true.delta)
dt.all.1 <- rbind(comps, comps.freq)
#root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
load(file = paste0(root.path,"Simulation results\\R Data\\simu_true_theta2.RData")) #unm.conf.inds, data.source.mx, simu.true
load(file = paste0(root.path,"Simulation results\\R Data\\freq_RD_drift2_5000_0923.RData"))
comps.freq$set.num <- as.character(comps.freq$set.num)
comps.freq <- merge(comps.freq  , simu.true, by="set.num")
load(file = paste0(root.path,"Simulation results\\R Data\\stan_RD_drift2_5000_0821.RData"))
comps$set.num <- as.character(comps$set.num)
comps <- merge(comps, simu.true, by="set.num")
# generate table
comps <- comps %>% dplyr::mutate(point.est = mean, lower.CI = X2.5., upper.CI = X97.5.,label = fit) %>%
dplyr::select(point.est,lower.CI,upper.CI,label,sim,
set.num, data.source, unm.confs, lambdas, true.thetaE, true.thetaCD,true.thetaCH, data.source.diff,true.delta)
dt.all.2 <- rbind(comps, comps.freq) %>% dplyr::filter(! data.source %in% c(1,2))
root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
load(file = paste0(root.path,"Simulation results\\R Data\\simu_true_theta3.RData")) #unm.conf.inds, data.source.mx, simu.true
library(stringr)
# load R functions
#root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
root.path <- "D:\\Merck Intern\\OneDrive\\AugRCT_new\\"
code.path <- paste0(root.path,"R\\")
source(paste0(code.path,"RFunctions.R"))
source(paste0(code.path,"rwe_functions.R"))
Dir.name <- "Drift"
n.sim <- 500
load(file = paste0(root.path,"Simulation results\\R Data\\simu_true_theta1.RData")) #unm.conf.inds, data.source.mx, simu.true
load(file = paste0(root.path,"Simulation results\\R Data\\freq_RD_drift1_5000_0821.RData"))
unique(comps.freq$label)
comps.freq <- comps.freq
load(file = paste0(root.path,"Simulation results\\R Data\\stan_RD_drift1_5000_0821.RData"))
unique(comps$fit)
comps <- comps %>% dplyr::filter(! fit %in% c("Stratification + fixed Power Prior",
"IPTW trim + fixed power prior (logit model)"))
comps.freq$set.num <- as.character(comps.freq$set.num)
comps$set.num <- as.character(comps$set.num)
comps <- merge(comps, simu.true, by="set.num")
comps.freq <- merge(comps.freq, simu.true, by="set.num")
# generate table
comps <- comps %>% dplyr::mutate(point.est = mean, lower.CI = X2.5., upper.CI = X97.5.,label = fit) %>%
dplyr::select(point.est,lower.CI,upper.CI,label,sim,
set.num, data.source, unm.confs, lambdas, true.thetaE, true.thetaCD,true.thetaCH, data.source.diff,true.delta)
dt.all.1 <- rbind(comps, comps.freq)
#root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
load(file = paste0(root.path,"Simulation results\\R Data\\simu_true_theta2.RData")) #unm.conf.inds, data.source.mx, simu.true
load(file = paste0(root.path,"Simulation results\\R Data\\freq_RD_drift2_5000_0923.RData"))
comps.freq$set.num <- as.character(comps.freq$set.num)
comps.freq <- merge(comps.freq  , simu.true, by="set.num")
load(file = paste0(root.path,"Simulation results\\R Data\\stan_RD_drift2_5000_0821.RData"))
comps$set.num <- as.character(comps$set.num)
comps <- merge(comps, simu.true, by="set.num")
# generate table
comps <- comps %>% dplyr::mutate(point.est = mean, lower.CI = X2.5., upper.CI = X97.5.,label = fit) %>%
dplyr::select(point.est,lower.CI,upper.CI,label,sim,
set.num, data.source, unm.confs, lambdas, true.thetaE, true.thetaCD,true.thetaCH, data.source.diff,true.delta)
dt.all.2 <- rbind(comps, comps.freq) %>% dplyr::filter(! data.source %in% c(1,2))
#root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
load(file = paste0(root.path,"Simulation results\\R Data\\simu_true_theta3.RData")) #unm.conf.inds, data.source.mx, simu.true
load(file = paste0(root.path,"Simulation results\\R Data\\freq_RD_drift15_5000_0821.RData"))
comps.freq$set.num <- as.character(comps.freq$set.num)
comps.freq <- merge(comps.freq  , simu.true, by="set.num")
load(file = paste0(root.path,"Simulation results\\R Data\\stan_RD_drift15_5000_0821.RData"))
comps$set.num <- as.character(comps$set.num)
comps <- merge(comps, simu.true, by="set.num")
comps <- comps %>% dplyr::mutate(point.est = mean, lower.CI = X2.5., upper.CI = X97.5.,label = fit) %>%
dplyr::select(point.est,lower.CI,upper.CI,label,sim,
set.num, data.source, unm.confs, lambdas, true.thetaE, true.thetaCD,true.thetaCH, data.source.diff,true.delta)
dt.all.3 <- rbind(comps, comps.freq) %>% dplyr::filter(! data.source %in% c(1,2))
#root.path <- "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\"
load(file = paste0(root.path,"Simulation results\\R Data\\simu_true_theta4.RData")) #unm.conf.inds, data.source.mx, simu.true
load(file = paste0(root.path,"Simulation results\\R Data\\freq_RD_drift05_5000_0821.RData"))
comps.freq$set.num <- as.character(comps.freq$set.num)
comps.freq <- merge(comps.freq  , simu.true, by="set.num")
load(file = paste0(root.path,"Simulation results\\R Data\\stan_RD_drift05_5000_0821.RData"))
comps$set.num <- as.character(comps$set.num)
comps <- merge(comps, simu.true, by="set.num")
comps <- comps %>% dplyr::mutate(point.est = mean, lower.CI = X2.5., upper.CI = X97.5.,label = fit) %>%
dplyr::select(point.est,lower.CI,upper.CI,label,sim,
set.num, data.source, unm.confs, lambdas, true.thetaE, true.thetaCD,true.thetaCH, data.source.diff,true.delta)
dt.all.4 <- rbind(comps, comps.freq) %>% dplyr::filter(! data.source %in% c(1,2))
dt.all <- rbind(dt.all.1, dt.all.2, dt.all.3, dt.all.4)
RD.bound <- 0
comps.all <- dt.all %>% dplyr::mutate(true.par = true.delta) %>%
dplyr::mutate(cov.ind = 1*((true.par >= lower.CI) & (true.par <= upper.CI)), Power.ind = 1*(lower.CI > RD.bound), Bias.ind = point.est - true.par, CI.width = upper.CI - lower.CI)
summ <- comps.all%>% dplyr::group_by(set.num, label, data.source, data.source.diff, unm.confs,lambdas) %>%
dplyr::summarise(nsim = n(), Bias = mean(Bias.ind), Coverage = round(100*mean(cov.ind),2),
Emp.SD = round(sd(point.est),3), Emp.MSE = round(sqrt(sum(Bias.ind^2)/(nsim-1)),3),Emp.MSE2 = round(sum(Bias.ind^2)/(nsim-1),3),
CI.width.mean = round(mean(CI.width),2), Power = round(mean(Power.ind),4))
ref.MSE2 <- summ %>% dplyr::filter(label == "No borrowing") %>% dplyr::mutate(ref.Emp.MSE2 = Emp.MSE2) %>% dplyr::select(set.num, ref.Emp.MSE2)
summ <- merge(summ, ref.MSE2[,c("set.num","ref.Emp.MSE2")], by="set.num") %>% dplyr::mutate(MSE.Ratio = Emp.MSE2/ref.Emp.MSE2)
method.level <- c("No borrowing", "Pool", "PS stratification (trim)",
"Matching", "matching + power prior (Bayes model 1)", "matching + power prior (Bayes model 2)","Matching + Commensurate prior",
"IPTW", "IPTW trim (org)","IPTW + fixed power prior (logit model)","IPTW + commensurate prior", "IPTW trim + fixed power prior (logit model)", "IPTW trim + commensurate prior")
method.label <- c("No borrowing", "Pooling", "PS Stratification" ,
"PS Matching", "Power Prior (B1)","Power Prior (B2)","Commensurate Prior",
"IPTW","Trimming","power prior", "commensurate prior", "trimming + power prior", "trimming + commensurate prior")
method.level1 <- c("No borrowing", "matching + power prior (Bayes model 1)", "Matching + Commensurate prior","IPTW + commensurate prior", "IPTW trim + commensurate prior")
method.label1 <- c("No borrowing", "Matching + Power Prior", "Matching + Commensurate Prior","IPTW + Commensurate Prior", "IPTW trimming + Commensurate Prior")
subgroup.label <- c(rep("Frequentist",3),rep("PS Matching Only/+ Bayesian \n Information Borrowing", 4),
rep("IPTW Only/+Trimming/+Bayesian \n Information Borrowing", 6))
summ.long.0 <- summ %>% tidyr::gather(quantity, value, nsim, Bias, Coverage, Emp.SD, Emp.MSE, CI.width.mean, Power,MSE.Ratio)
summ.long.0$quantity[summ.long.0$lambdas==0 & summ.long.0$quantity=="Power"] <- "Type I error"
summ.long.0 <- summ.long.0 %>% dplyr::filter(label %in% method.level1, ! data.source%in% c(1,2)) %>% #dplyr::filter(label != "No borrowing")
dplyr::mutate(label.new=factor(label, levels=method.level,
labels=method.label),
subgroup=factor(label, levels=method.level, labels=subgroup.label),
Method=as.character(factor(label, levels=method.level1, labels=method.label1)),
Drift=factor(data.source, levels=2:8, labels=c("CDD", "Time Trend", "CDD", "Time Trend + CDD", "CDD", "Time Trend", "Time Trend + CDD")),
unm.confs.ind = factor(unm.confs, levels= 1:2, labels=c("1. No","2. Yes")))
summ.longs <- list(summ.long.0 %>% dplyr::filter(unm.confs == 1) , # remove results with unmeasured confounding
summ.long.0 ) #add unmeasured confounding
fig.path = paste0(root.path, "Simulation Results\\Figure\\", Dir.name, "\\")
dir.create(fig.path)
nb.ref <- unique(summ.long.0[(summ.long.0$label=="No borrowing")&(summ.long.0$unm.confs == 1),c("value","quantity","lambdas")])
files <- list.files(path = fig.path,pattern = "*.png")
num <- as.numeric(gsub("[^\\d]+", "", files, perl=TRUE))
num[num>40] <- num[num>40]/10
kableone(files[order(num)])
install.packages("rjags")
source(paste0(code.path,"RFunctions.R"))
install.packages("MatchIt")
source(paste0(code.path,"RFunctions.R"))
install.packages("optmatch")
source(paste0(code.path,"RFunctions.R"))
# load R functions
library(tableone)
files <- list.files(path = fig.path,pattern = "*.png")
num <- as.numeric(gsub("[^\\d]+", "", files, perl=TRUE))
num[num>40] <- num[num>40]/10
kableone(files[order(num)])
knitr::include_graphics(paste0(fig.path, files[order(num)]))
plot.simu.drift <- function(fig.dt, fig.title, quants,
ref.quants, ref.locs, ref.labels,
#cols,
facet.row, facet.col,
#fig.path = "C:\\Users\\wangxi8\\OneDrive - Merck Sharp & Dohme, Corp\\AugRCT_new\\Simulation Results\\Figure\\",
fig.path = "D:\\Merck Intern\\OneDrive\\AugRCT_new\\Simulation Results\\Figure\\",
fig.width = 12, fig.height = 8,
log_10 = FALSE){
# this function is used to make plot of simulations
# fig.dt: data of figure
# fig.title: title of figure
# quants: a string vector of quantities to plot
# ref.quants: a string vector of quantities to add refrence lines
# ref.locs: a real number vector of locations for reference lines
# ref.labels: a vector of refline lables
# cols: a vector of color codes for plots
# facet.row: a string vector of variable names in rows for facet
# facet.col: a string vector of variable names in columns for facet
# log_10: log10 transformaiton of y axis (used to enlarge difference of Type I error)
facet.fml <- as.formula(paste(paste(facet.row, collapse = "+"), "~", paste(facet.col, collapse="+"), sep=""))
# reflines.dt: a dataframe with position of reflines
reflines.dt <- data.frame(quantity = ref.quants,
refline = ref.locs)
# reflines.text: a dataframe with text of reflines
reflines.text <- data.frame(quantity = ref.quants,
label = ref.labels,
Method="No borrowing",
y = ref.locs,
Drift = "CDD",
unm.confs.ind = "1. No",
set.num = 1)
fig.title1 <- paste0(fig.title, " (",paste(quants, collapse = ", "),")")
if (length(unique(fig.dt$unm.confs))>1){
p1 <- ggplot(fig.dt %>% dplyr::filter(quantity %in% quants),
aes(x=data.source.diff, y=value, group=Method, col=Method, shape=unm.confs.ind,
linetype=unm.confs.ind))
}else {
p1 <- ggplot(fig.dt %>% dplyr::filter(quantity %in% quants),
aes(x=data.source.diff, y=value, group=Method, col=Method))
}
p <-  p1 +
geom_point() + #theme_bw()+ #remove background
geom_line(size=0.7, alpha=0.7) +
facet_grid(facet.fml, scales="free", space="free_x") +
labs(title="", x="Drift") +
#labs(title=fig.title1, x="Method") +
theme(axis.text.x = element_text(angle = 45,vjust=0.7),text = element_text(size=14)) +
# theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
geom_hline(data=reflines.dt, aes(yintercept=refline), colour="grey20", linetype="dashed") +
geom_text(data=reflines.text,mapping=aes(x=-0.21, y=y,hjust   = 0.05, vjust = 0.05,label=label),size=4,col="grey20")  #+ scale_colour_discrete(labels = parse_format())
if (log_10 == TRUE){p <- p + scale_y_log10()}
ggsave(filename = paste0(str_replace(fig.title,":",""),".png"), path = fig.path, plot=p,
width = fig.width, height = fig.height, dpi = 300, units = "in", device='png')
return(p)
}
fig.path = paste0(root.path, "Simulation Results\\Figure\\", Dir.name, "\\")
dir.create(fig.path)
nb.ref <- unique(summ.long.0[(summ.long.0$Method=="No borrowing")&(summ.long.0$unm.confs == 1),c("value","quantity","lambdas")])
for (i in 1){
summ.long <- summ.longs[[i]]
summ.long.all <- summ.long %>% dplyr::filter(lambdas==1.185 | quantity=="Type I error")
fig.dt <- summ.long.all
p <- plot.simu.drift(fig.dt = fig.dt,
fig.title = paste0("Figure ",1+(i-1)*2, ": With Treatment Effect"),
quants = c("Bias","Power","Type I error"),
ref.quants = c("Bias","Power","Power","Type I error","Type I error"),
ref.locs = c(0,0.8, nb.ref$value[nb.ref$quantity=="Power"],
0.025, nb.ref$value[nb.ref$quantity=="Type I error" & nb.ref$lambdas ==0]),
ref.labels = c("0","0.8", as.character(round(nb.ref$value[nb.ref$quantity=="Power"], 2)),
".025", as.character(round(nb.ref$value[nb.ref$quantity=="Type I error" & nb.ref$lambdas ==0],2))),
#cols = cols,
facet.row = "quantity",
facet.col = "Drift",
fig.path = fig.path)
p <- plot.simu.drift(fig.dt = fig.dt,
fig.title = paste0("Figure ",2+(i-1)*2, ": With Treatment Effect"),
quants = c("Coverage","CI.width.mean","MSE.Ratio"),
ref.quants = c("Coverage","Coverage", "CI.width.mean","MSE.Ratio"),
ref.locs = c(100*(0.95-1.96*sqrt(0.05*(1-0.05)/n.sim)), 100*0.95,
nb.ref$value[nb.ref$quantity=="CI.width.mean" & nb.ref$lambdas !=0], 1),
ref.labels = c(round(100*(0.95-1.96*sqrt(0.05*(1-0.05)/n.sim)),1), round(100*0.95,1),
round(nb.ref$value[nb.ref$quantity=="CI.width.mean" & nb.ref$lambdas !=0], 1), 1),
#cols = cols,
facet.row = "quantity",
facet.col = "Drift",
fig.path = fig.path)
}
View(dt.all)
head(dt.all)
i=1
summ.long <- summ.longs[[i]]
summ.long.all <- summ.long %>% dplyr::filter(lambdas==1.185 | quantity=="Type I error")
fig.dt <- summ.long.all
p <- plot.simu.drift(fig.dt = fig.dt,
fig.title = paste0("Figure ",1+(i-1)*2, ": With Treatment Effect"),
quants = c("Bias","Power","Type I error"),
ref.quants = c("Bias","Power","Power","Type I error","Type I error"),
ref.locs = c(0,0.8, nb.ref$value[nb.ref$quantity=="Power"],
0.025, nb.ref$value[nb.ref$quantity=="Type I error" & nb.ref$lambdas ==0]),
ref.labels = c("0","0.8", as.character(round(nb.ref$value[nb.ref$quantity=="Power"], 2)),
".025", as.character(round(nb.ref$value[nb.ref$quantity=="Type I error" & nb.ref$lambdas ==0],2))),
#cols = cols,
facet.row = "quantity",
facet.col = "Drift",
fig.path = fig.path)
ref.locs = c(0,0.8, nb.ref$value[nb.ref$quantity=="Power"],
0.025, nb.ref$value[nb.ref$quantity=="Type I error" & nb.ref$lambdas ==0]),
ref.locs = c(0,0.8, nb.ref$value[nb.ref$quantity=="Power"],
0.025, nb.ref$value[nb.ref$quantity=="Type I error" & nb.ref$lambdas ==0])
ref.locs
ref.labels = c("0","0.8", as.character(round(nb.ref$value[nb.ref$quantity=="Power"], 2)),
".025", as.character(round(nb.ref$value[nb.ref$quantity=="Type I error" & nb.ref$lambdas ==0],2)))
ref.labels
View(nb.ref)
View(summ.long.0)
View(summ.long.all)
View(summ.long.0)
nb.ref <- unique(summ.long.0[(summ.long.0$label=="No borrowing")&(summ.long.0$unm.confs == 1),c("value","quantity","lambdas","data.source.diff")])
View(nb.ref)
nb.ref <- unique(summ.long.0[(summ.long.0$label=="No borrowing")&(summ.long.0$unm.confs == 1),c("value","quantity","lambdas")])#,"data.source.diff"
View(nb.ref)
summ.long.1 <- summ.long.0 %>% dplyr::mutate(value=round(value, 2))
summ.long.1 <- summ.long.0 %>% dplyr::mutate(value=round(value, 2))
nb.ref <- unique(summ.long.1[(summ.long.1$label=="No borrowing")&(summ.long.1$unm.confs == 1),c("value","quantity","lambdas")])#,"data.source.diff"
View(nb.ref)
View(dt.all.2)
View(summ.long.all)
